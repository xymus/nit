#include "nit.common.h"
#define COLOR_nitc__local_var_init__ToolContext___local_var_init_phase 49
extern const char FILE_nitc__local_var_init[];
#define COLOR_nitc__phase__Phase___toolcontext 0
extern const char FILE_nitc__phase[];
void nitc__local_var_init___APropdef___do_local_var_init(val* self, val* p0);
val* NEW_nitc__local_var_init__LocalVarInitVisitor(const struct type* type);
extern const struct type type_nitc__local_var_init__LocalVarInitVisitor;
#define COLOR_nitc__local_var_init__LocalVarInitVisitor__toolcontext_61d 15
#define COLOR_core__kernel__Object__init 0
void nitc___nitc__Visitor___enter_visit(val* self, val* p0);
#define COLOR_nitc__local_var_init__LocalVarInitVisitor___toolcontext 1
#define COLOR_nitc__local_var_init__LocalVarInitVisitor___maybe_unset_vars 2
#define COLOR_core__kernel__Object___61d_61d 4
#define COLOR_core__abstract_collection__SimpleCollection__add 50
#define COLOR_core__abstract_collection__Collection__has 27
#define COLOR_nitc__flow__AExpr___after_flow_context 17
#define COLOR_nitc__local_var_init__FlowContext___set_vars 1
short int nitc__local_var_init___FlowContext___is_variable_set(val* self, val* p0);
val* nitc___nitc__ANode___hot_location(val* self);
val* NEW_core__NativeArray(int length, const struct type* type);
extern const struct type type_core__NativeArray__core__String;
val* core__flat___NativeString___to_s_full(char* self, int64_t p0, int64_t p1);
#define COLOR_core__abstract_text__Object__to_s 3
#define COLOR_core__abstract_text__NativeArray__native_to_s 12
val* nitc___nitc__ToolContext___error(val* self, val* p0, val* p1);
#define COLOR_core__abstract_collection__RemovableCollection__remove 44
#define COLOR_nitc__local_var_init__ANode__accept_local_var_visitor 26
#define COLOR_nitc__local_var_init___nitc__local_var_init__LocalVarInitVisitor___core__kernel__Object__init 21
#define COLOR_nitc__flow__FlowContext___previous 2
extern const char FILE_nitc__flow[];
#define COLOR_core__array__AbstractArrayRead___length 0
val* core___core__SequenceRead___Collection__first(val* self);
val* core___core__AbstractArrayRead___core__abstract_collection__Collection__iterator(val* self);
#define COLOR_core__abstract_collection__Iterator__is_ok 12
#define COLOR_core__abstract_collection__Iterator__item 13
#define COLOR_core__abstract_collection__Iterator__next 14
#define COLOR_core__abstract_collection__Iterator__finish 15
#define COLOR_nitc__parser_nodes__ANode__visit_all 14
#define COLOR_nitc__local_var_init___AVardeclExpr___ANode__accept_local_var_visitor 78
#define COLOR_nitc__parser_nodes__AVardeclExpr___n_expr 7
#define COLOR_nitc__scope__AVardeclExpr___variable 8
void nitc__local_var_init___nitc__local_var_init__LocalVarInitVisitor___mark_is_unset(val* self, val* p0, val* p1);
#define COLOR_nitc__local_var_init___AVarExpr___ANode__accept_local_var_visitor 39
#define COLOR_nitc__scope__AVarFormExpr___variable 4
void nitc__local_var_init___nitc__local_var_init__LocalVarInitVisitor___check_is_set(val* self, val* p0, val* p1);
#define COLOR_nitc__local_var_init___AVarAssignExpr___ANode__accept_local_var_visitor 40
void nitc__local_var_init___nitc__local_var_init__LocalVarInitVisitor___mark_is_set(val* self, val* p0, val* p1);
#define COLOR_nitc__local_var_init___AVarReassignExpr___ANode__accept_local_var_visitor 38
