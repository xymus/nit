#include "nit.common.h"
#define COLOR_core__array__AbstractArrayRead___length 0
#define COLOR_core__abstract_collection__Collection__length 22
extern const struct type type_core__Int;
extern const char FILE_core__kernel[];
#define COLOR_core__abstract_collection__SequenceRead___91d_93d 34
#define COLOR_core__kernel__Object___61d_61d 4
int64_t core___core__AbstractArrayRead___core__abstract_collection__SequenceRead__index_of_from(val* self, val* p0, int64_t p1);
int64_t core___core__AbstractArrayRead___core__abstract_collection__SequenceRead__last_index_of_from(val* self, val* p0, int64_t p1);
val* NEW_core__Array(const struct type* type);
#define COLOR_core__Array__core__AbstractArrayRead___35dE 12
void core___core__Array___with_capacity(val* self, int64_t p0);
void core___core__Array___core__abstract_collection__SimpleCollection__add(val* self, val* p0);
#define COLOR_core__AbstractArray__core__AbstractArrayRead___35dE 13
extern const char FILE_core__array[];
#define COLOR_core__abstract_collection__Sequence___91d_93d_61d 53
#define COLOR_core__array__AbstractArrayRead___free_iterator 1
val* NEW_core__array__ArrayIterator(const struct type* type);
#define COLOR_core__array__ArrayIterator__core__AbstractArrayRead___35dE 14
#define COLOR_core__array__ArrayIterator__array_61d 19
#define COLOR_core__kernel__Object__init 0
#define COLOR_core__array__ArrayIterator___index 0
val* NEW_core__array__ArrayReverseIterator(const struct type* type);
#define COLOR_core__array__ArrayReverseIterator__core__AbstractArrayRead___35dE 15
#define COLOR_core__AbstractArray___35dE 6
#define COLOR_core__abstract_collection__SimpleCollection__add 50
#define COLOR_core__abstract_collection__Collection__is_empty 23
val* core___core__SequenceRead___last(val* self);
val* core___core__SequenceRead___Collection__first(val* self);
#define COLOR_core__array__AbstractArrayRead__copy_to 46
#define COLOR_core__array__AbstractArray__enlarge 62
#define COLOR_core__Collection__core__AbstractArray___35dE 7
#define COLOR_core__abstract_collection__Collection__iterator 24
#define COLOR_core__abstract_collection__Iterator__is_ok 12
#define COLOR_core__abstract_collection__Iterator__item 13
#define COLOR_core__abstract_collection__Iterator__next 14
#define COLOR_core__abstract_collection__Iterator__finish 15
int64_t core___core__AbstractArrayRead___core__abstract_collection__SequenceRead__index_of(val* self, val* p0);
void core___core__AbstractArray___core__abstract_collection__Sequence__remove_at(val* self, int64_t p0);
#define COLOR_core__array__Array___items 2
#define COLOR_core__Array___35dE 0
#define COLOR_core__array__Array___capacity 3
void core___core__Array___AbstractArray__enlarge(val* self, int64_t p0);
#define COLOR_core__NativeArray___35dE 0
#define COLOR_core__Collection__core__Array___35dE 2
#define COLOR_core__Array__core__Array___35dE 3
#define COLOR_core__AbstractArray__core__Array___35dE 4
#define COLOR_core___core__Array___AbstractArrayRead__copy_to 67
#define COLOR_core__NativeArray__core__NativeArray___35dE 1
val* NEW_core__NativeArray(int length, const struct type* type);
#define COLOR_core__NativeArray__core__Array___35dE 5
#define COLOR_core___core__Array___core__kernel__Object__init 65
void core___core__Array___core__kernel__Object__init(val* self);
void core___core__Array___core__abstract_collection__Sequence___91d_93d_61d(val* self, int64_t p0, val* p1);
extern const struct type type_core__Array__nullable__core__Object;
#define COLOR_core___core__Array___core__kernel__Object___61d_61d 66
#define COLOR_core__kernel__Object___33d_61d 1
val* core__array___Collection___to_a(val* self);
#define COLOR_core__kernel__Object__SELF 1
#define COLOR_core__array__ArrayIterator___array 1
#define COLOR_core__AbstractArrayRead__core__array__ArrayIterator___35dE 1
#define COLOR_core__array___core__array__ArrayIterator___core__kernel__Object__init 20
#define COLOR_core__array___core__array__ArrayReverseIterator___core__kernel__Object__init 21
#define COLOR_core__array__ArraySet___array 0
short int core___core__AbstractArrayRead___core__abstract_collection__Collection__has(val* self, val* p0);
#define COLOR_core__ArraySet___35dE 0
short int core___core__AbstractArrayRead___core__abstract_collection__Collection__is_empty(val* self);
void core___core__ArraySet___remove_at(val* self, int64_t p0);
void core___core__AbstractArray___core__abstract_collection__RemovableCollection__clear(val* self);
val* NEW_core__array__ArraySetIterator(const struct type* type);
#define COLOR_core__array__ArraySetIterator__core__ArraySet___35dE 2
val* core___core__AbstractArrayRead___core__abstract_collection__Collection__iterator(val* self);
#define COLOR_core__array__ArraySetIterator__iter_61d 18
val* core___core__AbstractArray___core__abstract_collection__Sequence__pop(val* self);
#define COLOR_core___core__ArraySet___core__kernel__Object__init 16
#define COLOR_core__Array__core__ArraySet___35dE 3
val* NEW_core__ArraySet(const struct type* type);
#define COLOR_core__ArraySet__core__ArraySet___35dE 4
void core___core__ArraySet___core__kernel__Object__init(val* self);
void core___core__SimpleCollection___add_all(val* self, val* p0);
#define COLOR_core__array__ArraySetIterator___iter 0
#define COLOR_core__Iterator__core__array__ArraySetIterator___35dE 1
#define COLOR_core__array___core__array__ArraySetIterator___core__kernel__Object__init 19
#define COLOR_core__ArrayMap___35dK 2
int64_t core___core__ArrayMap___index(val* self, val* p0);
#define COLOR_core__array__ArrayMap___items 4
val* core___core__Array___core__abstract_collection__SequenceRead___91d_93d(val* self, int64_t p0);
#define COLOR_core__abstract_collection__Couple___second 1
val* core___core__MapRead___provide_default_value(val* self, val* p0);
#define COLOR_core__ArrayMap___35dE 3
#define COLOR_core__Couple___35dS 1
extern const char FILE_core__abstract_collection[];
val* NEW_core__Couple(const struct type* type);
#define COLOR_core__Couple__core__ArrayMap___35dK__core__ArrayMap___35dE 4
#define COLOR_core__abstract_collection__Couple__first_61d 14
#define COLOR_core__abstract_collection__Couple__second_61d 13
void core___core__AbstractArray___core__abstract_collection__Sequence__push(val* self, val* p0);
#define COLOR_core__array__ArrayMap___keys 0
val* NEW_core__array__ArrayMapKeys(const struct type* type);
#define COLOR_core__array__ArrayMapKeys__core__ArrayMap___35dK__core__ArrayMap___35dE 5
#define COLOR_core__array__ArrayMapKeys__map_61d 12
#define COLOR_core__array__ArrayMap___values 2
val* NEW_core__array__ArrayMapValues(const struct type* type);
#define COLOR_core__array__ArrayMapValues__core__ArrayMap___35dK__core__ArrayMap___35dE 6
#define COLOR_core__array__ArrayMapValues__map_61d 12
#define COLOR_core__array__ArrayMap___last_index 5
#define COLOR_core__abstract_collection__Couple___first 0
val* NEW_core__ArrayMap(const struct type* type);
#define COLOR_core__ArrayMap__core__ArrayMap___35dK__core__ArrayMap___35dE 7
void core___core__Map___add_all(val* self, val* p0);
#define COLOR_core__array__ArrayMapKeys___map 0
#define COLOR_core__ArrayMap__core__array__ArrayMapKeys___35dK__core__array__ArrayMapKeys___35dE 0
short int core__array___core__array__ArrayMapKeys___core__abstract_collection__Collection__has(val* self, val* p0);
#define COLOR_core__array__ArrayMapKeys___35dK 1
short int core___core__ArrayMap___core__abstract_collection__MapRead__is_empty(val* self);
int64_t core___core__ArrayMap___core__abstract_collection__MapRead__length(val* self);
val* NEW_core__MapKeysIterator(const struct type* type);
#define COLOR_core__MapKeysIterator__core__array__ArrayMapKeys___35dK__core__array__ArrayMapKeys___35dE 2
val* core___core__CoupleMap___MapRead__iterator(val* self);
#define COLOR_core__abstract_collection__MapKeysIterator__original_iterator_61d 18
void core___core__ArrayMap___core__abstract_collection__Map__clear(val* self);
void core___core__ArrayMap___remove_at_index(val* self, int64_t p0);
#define COLOR_core__array___core__array__ArrayMapKeys___core__kernel__Object__init 14
#define COLOR_core__array__ArrayMapValues___map 0
#define COLOR_core__ArrayMap__core__array__ArrayMapValues___35dK__core__array__ArrayMapValues___35dE 0
val* NEW_core__MapValuesIterator(const struct type* type);
#define COLOR_core__MapValuesIterator__core__array__ArrayMapValues___35dK__core__array__ArrayMapValues___35dE 1
#define COLOR_core__abstract_collection__MapValuesIterator__original_iterator_61d 18
#define COLOR_core__array___core__array__ArrayMapValues___core__kernel__Object__init 14
#define COLOR_core__Array__core__Iterator___35dE 0
#define COLOR_core__Array__core__Collection___35dE 11
void core___core__Array___core__abstract_collection__SimpleCollection__add_all(val* self, val* p0);
